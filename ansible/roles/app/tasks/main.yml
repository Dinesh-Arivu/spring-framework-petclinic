---
- name: Ensure apt cache refreshed
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Ensure 'universe' repository is enabled (Ubuntu)
  apt_repository:
    repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Refresh apt cache after repository change
  apt:
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Check if tomcat9 package is available
  command: apt-cache policy tomcat9
  register: tomcat9_policy
  changed_when: false
  failed_when: false

- name: Set fact tomcat_pkg_available
  set_fact:
    tomcat_pkg_available: "{{ (tomcat9_policy.stdout is defined) and (tomcat9_policy.stdout.find('Candidate: (none)') == -1) and (tomcat9_policy.stdout | length > 0) }}"

- name: Install Java (OpenJDK 17)
  apt:
    name: openjdk-17-jdk
    state: present

- name: Install Tomcat via apt when available
  apt:
    name: tomcat9
    state: present
  when: tomcat_pkg_available

- name: Install Tomcat (manual archive) when tomcat9 package is not available
  block:
    - name: Install utilities and Java for manual Tomcat install
      apt:
        name:
          - wget
          - tar
          - default-jdk
        state: present

    - name: Download Tomcat 9 tarball
      get_url:
        url: "https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.80/bin/apache-tomcat-9.0.80.tar.gz"
        dest: /tmp/tomcat9.tar.gz
        mode: '0644'

    - name: Create /opt/tomcat directory
      file:
        path: /opt/tomcat
        state: directory
        mode: '0755'

    - name: Extract Tomcat archive
      unarchive:
        src: /tmp/tomcat9.tar.gz
        dest: /opt/tomcat
        remote_src: yes

    - name: Symlink /opt/tomcat/latest to the extracted Tomcat
      file:
        src: /opt/tomcat/apache-tomcat-9.0.80
        dest: /opt/tomcat/latest
        state: link

    - name: Create systemd unit for Tomcat
      copy:
        dest: /etc/systemd/system/tomcat.service
        content: |
          [Unit]
          Description=Apache Tomcat 9
          After=network.target

          [Service]
          Type=forking
          ExecStart=/opt/tomcat/latest/bin/startup.sh
          ExecStop=/opt/tomcat/latest/bin/shutdown.sh
          User=root
          Group=root
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start tomcat systemd service
      service:
        name: tomcat
        state: started
        enabled: yes
  when: not tomcat_pkg_available

- name: Ensure Tomcat is running (package-managed path may use tomcat9 service name)
  service:
    name: "{{ 'tomcat9' if tomcat_pkg_available else 'tomcat' }}"
    state: started
    enabled: yes

- name: Install nginx
  apt:
    name: nginx
    state: present

- name: Configure Nginx as reverse proxy for Tomcat
  copy:
    dest: /etc/nginx/sites-available/petclinic
    content: |
      server {
          listen 80;
          location / {
              proxy_pass http://127.0.0.1:8080/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
          }
      }
  notify: reload nginx

- name: Enable nginx site
  file:
    src: /etc/nginx/sites-available/petclinic
    dest: /etc/nginx/sites-enabled/petclinic
    state: link

- name: Remove default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: Create Tomcat setenv.sh with DB connection properties
  template:
    src: setenv.sh.j2
    dest: /etc/tomcat9/setenv.sh
    owner: root
    mode: '0755'
  vars:
    db_host: "{{ hostvars[groups['db'][0]]['ansible_host'] | default(hostvars[groups['db'][0]]['inventory_hostname']) }}"
    db_port: 3306
    db_name: petclinic
    db_user: petclinic
    db_pass: petclinic

- name: Upload petclinic.war to Tomcat webapps
  copy:
    src: ../../../../spring-framework-petclinic/target/petclinic.war
    dest: /var/lib/tomcat9/webapps/petclinic.war
    owner: tomcat
    group: tomcat
    mode: '0644'
  notify: restart tomcat

- name: Wait for app to be deployed (Tomcat auto-deploy)
  wait_for:
    host: 127.0.0.1
    port: 8080
    delay: 5
    timeout: 120
